basePath: /api/v1
definitions:
  github_com_jumayevgadam_evernote-go_internal_models_abstract.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  github_com_jumayevgadam_evernote-go_internal_models_notebooks.Request:
    properties:
      notebook_name:
        type: string
    required:
    - notebook_name
    type: object
  github_com_jumayevgadam_evernote-go_internal_models_user.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  github_com_jumayevgadam_evernote-go_internal_models_user.SignUpReq:
    properties:
      email:
        type: string
      password:
        maxLength: 30
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact:
    email: hypergadam@gmail.com
    name: Gadam Jumayev
    url: https://github.com/jumayevgadam
  description: This is a simple evernote which written in golang(gin)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: EVERNOTE-GOLANG-GIN
  version: "3.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: user login to evernote
      parameters:
      - description: login info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/github_com_jumayevgadam_evernote-go_internal_models_user.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_jumayevgadam_evernote-go_internal_models_abstract.SuccessResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: User Login
      tags:
      - users
  /auth/register:
    post:
      consumes:
      - application/json
      description: user register to evernote
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/github_com_jumayevgadam_evernote-go_internal_models_user.SignUpReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_jumayevgadam_evernote-go_internal_models_abstract.SuccessResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: User Register
      tags:
      - users
  /notebooks:
    post:
      consumes:
      - application/json
      description: creating a new notebook
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: notebook request info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/github_com_jumayevgadam_evernote-go_internal_models_notebooks.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_jumayevgadam_evernote-go_internal_models_abstract.SuccessResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
        default:
          description: ""
          schema: {}
      summary: Add Notebook
      tags:
      - notebooks
swagger: "2.0"
